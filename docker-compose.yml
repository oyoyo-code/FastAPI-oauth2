services:
  app:
    container_name: "app"
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./app:/code/app
    build: .
    ports:
      - "8000:8000"
      - "5678:5678"
    command:
      /bin/bash -c "python -m debugpy --listen 0.0.0.0:5678 -m uvicorn app.main:app --reload --host 0.0.0.0 --port 8000"

  db:
    image: mysql
    container_name: "db"
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      TZ: "Asia/Tokyo"
    volumes:
      - ./mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"

#volumes:
#  mysql_data:

# docker composeは余計なスペースで動かなくなるため、かなり注意されたし。